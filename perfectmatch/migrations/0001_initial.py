# Generated by Django 4.1.6 on 2023-02-03 15:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import perfectmatch.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('phone', models.CharField(max_length=13, unique=True)),
                ('email', models.CharField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'login',
            },
        ),
        migrations.CreateModel(
            name='FriendRequests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fromuserid', models.IntegerField()),
                ('touserid', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'friendrequests',
            },
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('otheruserid', models.IntegerField()),
                ('chatid', models.TextField()),
            ],
            options={
                'db_table': 'matches',
            },
        ),
        migrations.CreateModel(
            name='ReportedUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('reportedby', models.CharField(max_length=50)),
                ('reportedbyid', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reportedusers',
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('subscription', models.CharField(max_length=50)),
                ('subscriptiontype', models.CharField(max_length=50)),
                ('expirydate', models.DateTimeField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('ispaid', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'subscriptions',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('isactive', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=20)),
                ('religion', models.CharField(max_length=30)),
                ('bio', models.TextField(null=True)),
                ('relationtype', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('photo1', models.ImageField(blank=True, null=True, upload_to=perfectmatch.models.upload_to)),
                ('photo2', models.ImageField(blank=True, null=True, upload_to=perfectmatch.models.upload_to)),
                ('photo3', models.ImageField(blank=True, null=True, upload_to=perfectmatch.models.upload_to)),
                ('photo4', models.ImageField(blank=True, null=True, upload_to=perfectmatch.models.upload_to)),
                ('photo5', models.ImageField(blank=True, null=True, upload_to=perfectmatch.models.upload_to)),
                ('reportlist', models.JSONField(null=True)),
                ('blocklist', models.JSONField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'userprofile',
            },
        ),
    ]
